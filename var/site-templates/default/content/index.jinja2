{% extends "/layout/base.jinja2" %}
{% set some_var="SOME VARIABLE" %}

{% block content %}

<!-- BEGIN EDITABLE editable001 -->
<div id="editable001" class="editable">
<h2>This site is derived from the default site template.</h2>

<p>You see the landing page of the default site, which is used as a
starting point for new web sites.
</p>

<p>This text is in an editable area. That means, after you have logged in you
can edit this text right on this page.
</p>
</div>
<!-- END EDITABLE editable001 -->

<p>This area you only can edit with the source editor. We use some Jinja directives
here to construct the links to the picture and the second page. To keep those
directives as they are, you should edit them only with the source editor.

<p><img src="{{ asset_url('img/grass-mud-horse2.jpg') }}">
</p>

<p>If you do not grok what the depicted thing is,
<a href="{{ url('two') }}">here</a> is another aspect of it.
</p>

<p>PySite allows you to store arbitrary complex datastructures 
in text files along your web pages. Their format may be YAML, JSON or INI,
whichever you prefer. You can load this data
in a page and call its fields like so (look at the source):
</p>
<p>
{% set data = load_config('test.yaml') %}
{% for k, v in data.items() %}
Found key "{{ k }}" with value "{{ v }}".<br>
</p>
{% endfor %}

<p>A more complex example of this feature is the <a href="{{ url('eventlist') }}">event list</a>.
</p>

<!-- BEGIN EDITABLE  -->
<div class="editable">
We have marked this area as editable, too. But we did not give it an unique ID,
so PySite does not know how to save it. It tells you so as soon as you enter
the edit mode.
</div>
<!-- END EDITABLE -->


<p>Nothing to edit here.</p>


<!-- BEGIN EDITABLE editable002 -->
<div id="editable002" class="editable">
<p>
Another editable area, this has ID 'editable002'. The value of the ID is free for you to
choose. As long as the area has an ID and a CSS class "editable".
</p>

<h1 class="sass-demo">FROBOTZ!</h1>
</div>
<!-- END EDITABLE editable002 -->


{% filter markdown %}

This is Markdown
================


Compose your webpages either with traditional HTML or with Markdown, which is
a lightweight text format. Markdown is also flexible enough to let you assign
HTML attributes, and to intersperse an occasional HTML tag.
{: #first-para .some-css-class data-foo="bar" title="Title assigned through Markdown" }

(Hover above paragraph to see its title.)

- aaa
- bbb
- ccc


Col 1 | Col 2 | Right Aligned
------|-------|--------------:
cell1 | cell2 | 1000
cell3 | cell4 |    12.45


Here we call a variable we had defined earlier on this page. You can call Jinja
directives inside Markdown areas too.
{{ some_var }}

Markdown ends here
------------------

{% endfilter %}


{% endblock %}








